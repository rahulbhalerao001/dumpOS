#include <sys/socket.h>
#include <sys/types.h>
#include <netinet/in.h>
#include <netdb.h>
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <unistd.h>
#include <errno.h>
#include <arpa/inet.h> 
#include "rdstc.h"
#include "config.h"

int main(int argc, char *argv[])
{
    int sockfd = 0, n = 0;
    char recvBuff[1024];

    struct sockaddr_in serv_addr; 

    if(argc != 2)
    {
        printf("\n Usage: %s <ip of server> \n",argv[0]);
        return 1;
    } 

    memset(recvBuff, '0',sizeof(recvBuff));

    if((sockfd = socket(AF_INET, SOCK_STREAM, 0)) < 0)	// creates a socket.
    {
        printf("\n Error : Could not create socket \n");
        return 1;
    } 

    memset(&serv_addr, '0', sizeof(serv_addr)); 

    serv_addr.sin_family = AF_INET;
    serv_addr.sin_port = htons(5002); 

    if(inet_pton(AF_INET, argv[1], &serv_addr.sin_addr)<=0)
    {
        printf("\n inet_pton error occured\n");
        return 1;
    } 


    while( connect(sockfd, (struct sockaddr *)&serv_addr, sizeof(serv_addr)) < 0) // connect socket with remote socket
    {
       sleep(0.1);
       printf("\n Error : Connect Failed \n");
//       return 1;
    } 
    unsigned long long int s_t, e_t;
    char msg[] = "abcdefg";
    char recvBuf[8];
    int i;
    for(i = 0; i < 5; i++){
    s_t = rdtsc();	
    if(send(sockfd, msg, sizeof(msg),0) != 8)
	break;
    if(recv(sockfd, recvBuf, 8 * sizeof(char), 0) != 8)
	break;
    e_t = rdtsc();
    sleep(0.1);
    printf("%f\n", (e_t - s_t)/(CPU_FREQ*1000000));

   } 
    

/*    while ( (n = read(sockfd, recvBuff, sizeof(recvBuff)-1)) > 0)
    {
        recvBuff[n] = 0;
        if(fputs(recvBuff, stdout) == EOF)
        {
            printf("\n Error : Fputs error\n");
        }
    } 
*/
    if(n < 0)
    {
        printf("\n Read error \n");
    } 

    return 0;
}
